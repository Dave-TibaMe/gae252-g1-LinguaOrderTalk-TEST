# .github/workflows/deploy-slash.yml (專業版) 0002
# 使用 Nginx (子路徑) + systemd + Gunicorn 部署

name: 'Deploy to VM: Slash (Subdirectory)'

on:
  push:
    branches:
      - main
    paths:
      - 'deployment/Slash/**'
      - '.github/workflows/deploy-slash.yml'
  workflow_dispatch:

env:
  # --- GCP 環境變數 ---
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_VM_ZONE: ${{ secrets.GCP_VM_ZONE }}
  GCP_VM_NAME: ${{ secrets.GCP_VM_NAME }}
  GCP_VM_USER: 'tibame20250527'
  
  # --- 專案路徑設定 (此檔案專用) ---
  LOCAL_APP_PATH: 'deployment/Slash' 
  REMOTE_APP_DIR: '/home/tibame20250527/Slash' 
  
  # --- 服務設定 (此檔案專用) ---
  NGINX_LOCATION_PREFIX: 'slash' # Nginx 的 location，例如 /slash/
  GUNICORN_PORT: 5002
  GUNICORN_SERVICE_NAME: 'slash' # systemd 服務的名稱

jobs:
  deploy-to-vm:
    name: 'Deploy Slash App to VM'
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: '1. Checkout Repository'
        uses: actions/checkout@v4

      - name: '2. Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: '3. Set up Google Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: '4. Create Remote Directory'
        run: |
          gcloud compute ssh ${{ env.GCP_VM_USER }}@${{ env.GCP_VM_NAME }} --zone ${{ env.GCP_VM_ZONE }} --project ${{ env.GCP_PROJECT_ID }} -- "mkdir -p ${{ env.REMOTE_APP_DIR }}"

      - name: '5. Copy Application Files to VM'
        run: |
          gcloud compute scp --recurse ./${{ env.LOCAL_APP_PATH }}/ ${{ env.GCP_VM_USER }}@${{ env.GCP_VM_NAME }}:${{ env.REMOTE_APP_DIR }} --zone ${{ env.GCP_VM_ZONE }} --project ${{ env.GCP_PROJECT_ID }}
      
      - name: '6. Install, Configure, and Restart Services on VM'
        run: |
          gcloud compute ssh ${{ env.GCP_VM_USER }}@${{ env.GCP_VM_NAME }} --zone ${{ env.GCP_VM_ZONE }} --project ${{ env.GCP_PROJECT_ID }} -- << 'EOF'
            set -e # 如果任何指令失敗，則立即停止

            # --- 從 GitHub Actions 傳入的環境變數 ---
            REMOTE_APP_DIR="${{ env.REMOTE_APP_DIR }}"
            NGINX_LOCATION_PREFIX="${{ env.NGINX_LOCATION_PREFIX }}"
            GUNICORN_PORT="${{ env.GUNICORN_PORT }}"
            GUNICORN_SERVICE_NAME="${{ env.GUNICORN_SERVICE_NAME }}"
            
            echo "--- 1. Updating packages and installing dependencies ---"
            sudo apt-get update
            sudo apt-get install -y nginx python3-pip python3-venv

            echo "--- 2. Navigating to application directory: ${REMOTE_APP_DIR} ---"
            cd ${REMOTE_APP_DIR}

            echo "--- 3. Setting up Python virtual environment ---"
            if [ ! -d "venv" ]; then
              python3 -m venv venv
            fi
            source venv/bin/activate
            pip install -r requirements.txt
            deactivate

            echo "--- 4. Creating .env file with secrets ---"
            cat > .env << EOT
            DB_TYPE='${{ secrets.DB_TYPE }}'
            DB_HOST='${{ secrets.DB_HOST }}'
            DB_USER='${{ secrets.DB_USER }}'
            DB_PASSWORD='${{ secrets.DB_PASSWORD }}'
            DB_DATABASE='${{ secrets.DB_DATABASE }}'
            EOT

            echo "--- 5. Creating Nginx configuration for the app ---"
            # 這是為單一應用程式的子路徑建立的設定檔片段
            sudo tee /etc/nginx/sites-available/${GUNICORN_SERVICE_NAME} > /dev/null << EOT_NGINX
            location /${NGINX_LOCATION_PREFIX}/ {
                # 重要：重寫 URL，移除前綴後再傳給 Gunicorn
                rewrite /${NGINX_LOCATION_PREFIX}/(.*) /\$1 break;
                
                proxy_pass http://127.0.0.1:${GUNICORN_PORT};
                proxy_set_header Host \$host;
                proxy_set_header X-Real-IP \$remote_addr;
                proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto \$scheme;
                # 重要：將原始的 URL 前綴傳給 Flask 的 ProxyFix
                proxy_set_header X-Script-Name /${NGINX_LOCATION_PREFIX}; 
                proxy_redirect off;
            }
            EOT_NGINX
            
            echo "--- 6. Enabling the Nginx site and restarting Nginx ---"
            sudo ln -sf /etc/nginx/sites-available/${GUNICORN_SERVICE_NAME} /etc/nginx/sites-enabled/
            # 我們不再移除 default，而是讓多個設定檔並存
            sudo nginx -t
            sudo systemctl restart nginx

            echo "--- 7. Creating Gunicorn systemd service file ---"
            # 使用 systemd 來管理 Gunicorn，更穩定可靠
            sudo tee /etc/systemd/system/${GUNICORN_SERVICE_NAME}.service > /dev/null << EOT_SYSTEMD
            [Unit]
            Description=Gunicorn instance for ${GUNICORN_SERVICE_NAME}
            After=network.target

            [Service]
            User=${{ env.GCP_VM_USER }}
            Group=www-data
            WorkingDirectory=${REMOTE_APP_DIR}
            Environment="PATH=${REMOTE_APP_DIR}/venv/bin"
            ExecStart=${REMOTE_APP_DIR}/venv/bin/gunicorn --workers 3 --bind 127.0.0.1:${GUNICORN_PORT} app:app

            [Install]
            WantedBy=multi-user.target
            EOT_SYSTEMD

            echo "--- 8. Starting and enabling Gunicorn service ---"
            sudo systemctl daemon-reload
            sudo systemctl restart ${GUNICORN_SERVICE_NAME}
            sudo systemctl enable ${GUNICORN_SERVICE_NAME} # 確保開機時自動啟動

            echo "--- Deployment of ${GUNICORN_SERVICE_NAME} completed successfully! ---"
          EOF
