# .github/workflows/deploy-slash.yml 1228
# [最終修正版] 使用 gcloud scp 將特定子目錄部署到指定 VM 路徑
# 並透過 Nginx + Gunicorn 運行
# 使用 'printf | sudo tee' 解決 sudo 重新導向的權限問題

name: 'Deploy to VM with Nginx: Slash (Subdirectory)'

on:
  push:
    branches:
      - main
    paths:
      - 'deployment/Slash/**'
      - '.github/workflows/deploy-slash.yml'
  workflow_dispatch:

env:
  # --- 請確認以下變數與您的 GCP 環境相符 ---
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_VM_ZONE: ${{ secrets.GCP_VM_ZONE }}
  GCP_VM_NAME: ${{ secrets.GCP_VM_NAME }}
  GCP_VM_USER: 'tibame20250527' # 直接指定 VM 上的使用者名稱
  
  # --- 部署路徑設定 ---
  # 來源: GitHub Repo 中的子目錄
  LOCAL_APP_PATH: 'deployment/Slash' 
  # 目標: VM 上的絕對路徑
  REMOTE_APP_DIR: '/home/tibame20250527/Slash' 
  
  # --- 服務設定 ---
  NGINX_APP_NAME: 'slash-app'
  GUNICORN_PORT: 5002

jobs:
  deploy-to-vm:
    name: 'Deploy Slash App to VM'
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: '1. Checkout Repository Code'
        uses: actions/checkout@v4

      - name: '2. Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: '3. Set up Google Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: '4. Create Remote Directory and Set Permissions'
        run: |
          gcloud compute ssh ${{ env.GCP_VM_USER }}@${{ env.GCP_VM_NAME }} --zone ${{ env.GCP_VM_ZONE }} --project ${{ env.GCP_PROJECT_ID }} -- << EOF
            mkdir -p ${{ env.REMOTE_APP_DIR }}
            sudo chown -R ${{ env.GCP_VM_USER }}:${{ env.GCP_VM_USER }} ${{ env.REMOTE_APP_DIR }}
          EOF

      - name: '5. Copy Application Files to VM'
        run: |
          gcloud compute scp --recurse ./${{ env.LOCAL_APP_PATH }}/ ${{ env.GCP_VM_USER }}@${{ env.GCP_VM_NAME }}:${{ env.REMOTE_APP_DIR }} --zone ${{ env.GCP_VM_ZONE }} --project ${{ env.GCP_PROJECT_ID }}
      
      - name: '6. Install, Configure, and Restart Services on VM'
        run: |
          gcloud compute ssh ${{ env.GCP_VM_USER }}@${{ env.GCP_VM_NAME }} --zone ${{ env.GCP_VM_ZONE }} --project ${{ env.GCP_PROJECT_ID }} -- << 'EOF'
            # 如果任何指令失敗，則立即停止腳本
            set -e

            # 從 GitHub Actions 傳入的環境變數
            REMOTE_APP_DIR="${{ env.REMOTE_APP_DIR }}"
            NGINX_APP_NAME="${{ env.NGINX_APP_NAME }}"
            GUNICORN_PORT="${{ env.GUNICORN_PORT }}"
            
            echo "--- 1. Updating package list and installing Nginx/Python tools ---"
            sudo apt-get update
            sudo apt-get install -y nginx python3-pip python3-venv

            echo "--- 2. Navigating to application directory: ${REMOTE_APP_DIR} ---"
            cd ${REMOTE_APP_DIR}

            echo "--- 3. Creating/Activating Python virtual environment ---"
            if [ ! -d "venv" ]; then
              python3 -m venv venv
            fi
            source venv/bin/activate

            echo "--- 4. Installing Python dependencies ---"
            pip install -r requirements.txt

            echo "--- 5. Creating .env file with secrets (Robust Method) ---"
            printf '%s\n' \
              "DB_TYPE='${{ secrets.DB_TYPE }}'" \
              "DB_HOST='${{ secrets.DB_HOST }}'" \
              "DB_USER='${{ secrets.DB_USER }}'" \
              "DB_PASSWORD='${{ secrets.DB_PASSWORD }}'" \
              "DB_DATABASE='${{ secrets.DB_DATABASE }}'" > .env

            echo "--- 6. Creating Nginx configuration file (Robust Method) ---"
            # 關鍵修正：使用 'printf | sudo tee' 來解決 sudo 重新導向的權限問題
            printf '%s\n' \
              "server {" \
              "    listen 80;" \
              "    listen [::]:80;" \
              "    server_name ${{ secrets.GCP_VM_IP }};" \
              "" \
              "    location / {" \
              "        proxy_pass http://127.0.0.1:${GUNICORN_PORT};" \
              "        proxy_set_header Host \$host;" \
              "        proxy_set_header X-Real-IP \$remote_addr;" \
              "        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;" \
              "        proxy_set_header X-Forwarded-Proto \$scheme;" \
              "    }" \
              "}" | sudo tee /etc/nginx/sites-available/${NGINX_APP_NAME} > /dev/null

            echo "--- 7. Enabling the Nginx site and restarting Nginx ---"
            sudo ln -sf /etc/nginx/sites-available/${NGINX_APP_NAME} /etc/nginx/sites-enabled/
            sudo rm -f /etc/nginx/sites-enabled/default
            sudo nginx -t
            sudo systemctl restart nginx

            echo "--- 8. Stopping old Gunicorn and starting new one ---"
            pkill -f "gunicorn.*--bind 127.0.0.1:${GUNICORN_PORT} app:app" || echo "Gunicorn not running, which is fine."
            nohup gunicorn --workers 3 --bind 127.0.0.1:${GUNICORN_PORT} app:app > ~/gunicorn-slash.log 2>&1 &

            deactivate
            echo "--- Deployment to ${REMOTE_APP_DIR} completed successfully! ---"
          EOF